// Note: original file  modified

// Copyright Â© 2019 Weald Technology Trading
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package merkle

import (
	"crypto/sha256"
)

// HashFunc is a hashing function
type HashFunc func(...[]byte) []byte

// HashType defines the interface that must be supplied by hash functions
type HashType interface {
	// Hash calculates the hash of a given input
	Hash(...[]byte) []byte

	// HashLength provides the length of the hash
	HashLength() int
}

type SHA256 struct{}

// New creates a new SHA256 hashing method
func NewSHA256() *SHA256 {
	return &SHA256{}
}

// HashLength returns the length of hashes generated by Hash() in bytes
func (h *SHA256) HashLength() int {
	return sha256.Size
}

// Hash generates a SHA256 hash from input byte arrays
func (h *SHA256) Hash(data ...[]byte) []byte {
	hash := sha256.New()
	for _, d := range data {
		hash.Write(d)
	}
	return hash.Sum(nil)
}
